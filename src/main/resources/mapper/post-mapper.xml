<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace= "com.example.bootproject.mapper.post.mapper.PostMapper">
    <resultMap type="com.example.bootproject.domain.post.Post" id="PostResultMap">
        <id property="id" column="id" />
        <result property="uuid" column="uuid" />
        <result property="title" column="title" />
        <result property="content" column="content" />
        <result property="createdAt" column="created_at" />
        <result property="updatedAt" column="updated_at" />
        <result property="deletedAt" column="deleted_at" />
    </resultMap>
    <select id="selectAllPosts" resultMap="PostResultMap">
        select * from post
    </select>

    <select id="selectPostsByKeywords" resultMap="PostResultMap">
        SELECT * FROM post
        WHERE (title like CONCAT('%', #{title}, '%') OR title IS NULL) AND created_at IS NOT NULL And deleted_at IS NULL
        <choose>
            <when test='sortOrder != null and sortOrder.name() == "ASC"'>
                ORDER BY created_at ASC
            </when>
            <when test='sortOrder != null and sortOrder.name() == "DESC"'>
                ORDER BY created_at DESC
            </when>
            <otherwise>
                ORDER BY created_at DESC
            </otherwise>
        </choose>
    </select>

    <select id="getPostByUUID" resultMap="PostResultMap">
        select * from post where uuid = #{uuid}
    </select>
    <select id="getPostById" resultMap="PostResultMap">
        select * from post where id = #{id}
    </select>

    <insert id="insertPost" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO post (title, uuid, content, created_at, updated_at)
        VALUES (#{title}, #{uuid}, #{content}, #{createdAt}, #{updatedAt})
    </insert>

    <update id="updatePost">
        UPDATE post
        SET title = #{title},content = #{content},updated_at = #{updatedAt}
        WHERE uuid = #{uuid}
    </update>

    <update id="softDeletePost">
        UPDATE post SET deleted_at = NOW() WHERE uuid = #{uuid}
    </update>

    <delete id="deletePost" >
        DELETE FROM post WHERE uuid = #{uuid}
    </delete>

</mapper>
